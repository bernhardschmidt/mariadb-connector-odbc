sudo: true
language: c
dist: bionic
services: docker
addons:
  hosts:
    - mariadb.example.com

cache:
  directories:
    - $HOME/docker

env: local=0

before_install:
  - git clone https://github.com/mariadb-corporation/connector-test-machine.git
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

install:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then  connector-test-machine/launch.bat -t "$srv" -v "$v" -d testo; fi
  - if [ "$TRAVIS_OS_NAME" = "linux"   ]; then  sudo apt-get update; fi
  - if [ "$TRAVIS_OS_NAME" = "linux"   ]; then  sudo apt-get install --allow-unauthenticated -y -m unixodbc-dev odbcinst1debian2 libodbc1; fi
  - echo $srv
  - echo $v
  - echo $local
  - echo $native
  - if [ "$TRAVIS_OS_NAME" = "linux"   ]; then  source connector-test-machine/launch.sh -t "$srv" -v "$v" -d testo -n 0 -l "$local" -n "$native"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx"     ]; then  source connector-test-machine/launch.sh -t "$srv" -v "$v" -d testo -n 0; fi

jobs:
  allow_failures:
    - env: srv=build v=10.6
  include:
    - env: srv=mariadb v=10.6
      os: windows
    - env: srv=mariadb v=10.6
      os: osx
      compiler: gcc
      before_script:
        - brew update
        - brew install openssl
        - brew install libiodbc
        - brew install mariadb
    - env: srv=mariadb v=10.2 local=1
    - env: srv=mariadb v=10.3 local=1
    - env: srv=mariadb v=10.4 local=1
    - env: srv=mariadb v=10.5 local=1
    - env: srv=mariadb v=10.7 local=1
    - env: srv=mariadb v=10.6
    - env: srv=mariadb v=10.6
      arch: s390x
    - if: type = push AND fork = false
      env: srv=maxscale
    - if: type = push AND fork = false
      env: srv=build v=10.6
    - if: type = push AND fork = false
      env: srv=mariadb-es v=10.6
    - if: type = push AND fork = false
      env: srv=mysql v=5.7
    - if: type = push AND fork = false
      env: srv=mysql v=8.0
    - if: type = push AND fork = false
      env: srv=skysql
    - if: type = push AND fork = false
      env: srv=skysql-ha

script:
  - export TEST_DRIVER=maodbc_test
  - export TEST_SOCKET=
  - export TEST_DSN=maodbc_test
  - export TEST_UID=$TEST_DB_USER
  - export TEST_SERVER=$TEST_DB_HOST
  - export TEST_PASSWORD=$TEST_DB_PASSWORD
  - export TEST_PORT=$TEST_DB_PORT
  - export TEST_SCHEMA=testo
  - echo "diego $TEST_UID"
  - export TEST_USETLS=$TEST_REQUIRE_TLS
  - if [ "$TEST_REQUIRE_TLS" = "1" ]; then export TEST_ADD_PARAM="FORCETLS=1"; fi
  - export TEST_SSL_PORT=$TEST_MAXSCALE_TLS_PORT
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then DEBIAN_FRONTEND=noninteractive sudo apt-get update ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then DEBIAN_FRONTEND=noninteractive sudo apt-get install --allow-unauthenticated -y --force-yes -m unixodbc-dev odbcinst1debian2 libodbc1 ; fi
  - export PWD=`pwd`
  - export ODBCINI="$PWD/test/odbc.ini"
  - export ODBCSYSINI="$PWD/test"
  - |-
    if [ "$TRAVIS_OS_NAME" = "osx" ] ; then
      ls -lrt /usr/local/opt/openssl@1.1/
      export TEST_DRIVER="$PWD/libmaodbc.dylib"
      export ODBCINSTINI="$PWD/test/odbcinst.ini"
      cat ${ODBCINSTINI}
      cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_OPENSSL=ON -DWITH_SSL=OPENSSL -DWITH_IODBC=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1 -DOPENSSL_LIBRARIES=/usr/local/opt/openssl@1.1/lib
    elif [ "$TRAVIS_OS_NAME" = "windows" ] ; then
      git submodule init
      git submodule update
      cmake . -DCONC_WITH_MSI=OFF -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_SIGNCODE=0 -DWITH_SSL=SCHANNEL
      cd libmariadb
      cmake --build . --config RelWithDebInfo --parallel 2
      cd ..
    else
      cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_OPENSSL=ON -DWITH_SSL=OPENSSL
    fi
  - cmake --build . --config RelWithDebInfo --parallel 1
  - cat ${ODBCINI}
  - cd test
  - ctest -VV

after_script:
  - bash <(curl -s https://codecov.io/bash)
